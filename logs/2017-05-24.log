[2017-05-24 10:46:16.781] [INFO] console - <div class="index" data-reactroot="" data-reactid="1" data-react-checksum="-2085967815"><div class="list" data-reactid="2"><ul data-reactid="3"><li data-reactid="4"><span data-reactid="5">xss</span><p data-reactid="6">&lt;/p&gt;&lt;javascript&gt;console.log(&#x27;xss&#x27;)&lt;/javascript&gt;&lt;p&gt;</p></li><li data-reactid="7"><span data-reactid="8">xss</span><p data-reactid="9">&lt;/p&gt;&lt;javascript&gt;console.log(&#x27;xss&#x27;)&lt;/javascript&gt;</p></li><li data-reactid="10"><span data-reactid="11">xss</span><p data-reactid="12">&lt;javascript&gt;console.log(&#x27;xss&#x27;)&lt;/javascript&gt;</p></li><li data-reactid="13"><span data-reactid="14">xss</span><p data-reactid="15">&lt;script&gt;console.log(&#x27;xss&#x27;)&lt;/script&gt;</p></li><li data-reactid="16"><span data-reactid="17">tests</span><p data-reactid="18">suq;</p></li></ul><div class="page" data-reactid="19"><button disabled="" data-reactid="20">上一页</button><button data-reactid="21">下一页</button></div></div></div>
[2017-05-24 10:46:16.976] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:00:40.178] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:00:42.200] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:00:43.758] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:00:45.317] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:00:46.623] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:00:47.892] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:00:49.042] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:00:50.170] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:00:53.204] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:00:55.038] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:01:04.571] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:01:06.051] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:01:08.565] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:13:55.397] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:14:19.273] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:16:18.560] [INFO] console - 1
[2017-05-24 11:16:18.566] [ERROR] app - TypeError: Cannot read property 'map' of undefined
    at List.render (D:/www/test/express/src/components/list/index.js:40:7)
    at D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:796:21
    at measureLifeCyclePerf (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:75:12)
    at ReactCompositeComponent._renderValidatedComponentWithoutOwnerOrContext (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:795:25)
    at ReactCompositeComponent._renderValidatedComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:822:32)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:362:30)
    at ReactCompositeComponent.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:258:21)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:371:34)
    at ReactCompositeComponent.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:258:21)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactDOMComponent.ReactMultiChild.Mixin.mountChildren (D:\www\test\express\node_modules\react-dom\lib\ReactMultiChild.js:238:44)
    at ReactDOMComponent.Mixin._createContentMarkup (D:\www\test\express\node_modules\react-dom\lib\ReactDOMComponent.js:653:32)
    at ReactDOMComponent.Mixin.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactDOMComponent.js:520:29)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:371:34)
[2017-05-24 11:16:18.660] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:17:02.257] [INFO] console - {}
[2017-05-24 11:17:02.288] [ERROR] app - TypeError: Cannot read property 'map' of undefined
    at List.render (D:/www/test/express/src/components/list/index.js:40:7)
    at D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:796:21
    at measureLifeCyclePerf (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:75:12)
    at ReactCompositeComponent._renderValidatedComponentWithoutOwnerOrContext (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:795:25)
    at ReactCompositeComponent._renderValidatedComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:822:32)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:362:30)
    at ReactCompositeComponent.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:258:21)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:371:34)
    at ReactCompositeComponent.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:258:21)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactDOMComponent.ReactMultiChild.Mixin.mountChildren (D:\www\test\express\node_modules\react-dom\lib\ReactMultiChild.js:238:44)
    at ReactDOMComponent.Mixin._createContentMarkup (D:\www\test\express\node_modules\react-dom\lib\ReactDOMComponent.js:653:32)
    at ReactDOMComponent.Mixin.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactDOMComponent.js:520:29)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:371:34)
[2017-05-24 11:17:02.413] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:17:59.394] [INFO] console - {}
[2017-05-24 11:17:59.423] [ERROR] app - TypeError: Cannot read property 'length' of undefined
    at List.render (D:/www/test/express/src/components/list/index.js:40:7)
    at D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:796:21
    at measureLifeCyclePerf (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:75:12)
    at ReactCompositeComponent._renderValidatedComponentWithoutOwnerOrContext (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:795:25)
    at ReactCompositeComponent._renderValidatedComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:822:32)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:362:30)
    at ReactCompositeComponent.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:258:21)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:371:34)
    at ReactCompositeComponent.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:258:21)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactDOMComponent.ReactMultiChild.Mixin.mountChildren (D:\www\test\express\node_modules\react-dom\lib\ReactMultiChild.js:238:44)
    at ReactDOMComponent.Mixin._createContentMarkup (D:\www\test\express\node_modules\react-dom\lib\ReactDOMComponent.js:653:32)
    at ReactDOMComponent.Mixin.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactDOMComponent.js:520:29)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:371:34)
[2017-05-24 11:17:59.587] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:18:01.346] [INFO] console - { data: 
   [ { _id: '591157c43e670e459090b326',
       title: 'xss',
       descriptions: '</p><javascript>console.log(\'xss\')</javascript><p>',
       __v: 0,
       create_date: '2017-05-09T05:46:44.464Z' },
     { _id: '591157ad3e670e459090b325',
       title: 'xss',
       descriptions: '</p><javascript>console.log(\'xss\')</javascript>',
       __v: 0,
       create_date: '2017-05-09T05:46:21.379Z' },
     { _id: '5911577c3e670e459090b324',
       title: 'xss',
       descriptions: '<javascript>console.log(\'xss\')</javascript>',
       __v: 0,
       create_date: '2017-05-09T05:45:32.321Z' },
     { _id: '5911574e3e670e459090b323',
       title: 'xss',
       descriptions: '<script>console.log(\'xss\')</script>',
       __v: 0,
       create_date: '2017-05-09T05:44:46.309Z' },
     { _id: '591157153e670e459090b322',
       title: 'tests',
       descriptions: 'suq;',
       __v: 0,
       create_date: '2017-05-09T05:43:49.492Z' } ],
  num: 5,
  page: 1 }
[2017-05-24 11:18:01.388] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:18:10.858] [INFO] console - { data: 
   [ { _id: '591157c43e670e459090b326',
       title: 'xss',
       descriptions: '</p><javascript>console.log(\'xss\')</javascript><p>',
       __v: 0,
       create_date: '2017-05-09T05:46:44.464Z' },
     { _id: '591157ad3e670e459090b325',
       title: 'xss',
       descriptions: '</p><javascript>console.log(\'xss\')</javascript>',
       __v: 0,
       create_date: '2017-05-09T05:46:21.379Z' },
     { _id: '5911577c3e670e459090b324',
       title: 'xss',
       descriptions: '<javascript>console.log(\'xss\')</javascript>',
       __v: 0,
       create_date: '2017-05-09T05:45:32.321Z' },
     { _id: '5911574e3e670e459090b323',
       title: 'xss',
       descriptions: '<script>console.log(\'xss\')</script>',
       __v: 0,
       create_date: '2017-05-09T05:44:46.309Z' },
     { _id: '591157153e670e459090b322',
       title: 'tests',
       descriptions: 'suq;',
       __v: 0,
       create_date: '2017-05-09T05:43:49.492Z' } ],
  num: 5,
  page: 1 }
[2017-05-24 11:18:10.893] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:22:45.372] [INFO] console - {}
[2017-05-24 11:22:45.394] [ERROR] app - TypeError: Cannot read property 'length' of undefined
    at List.render (D:/www/test/express/src/components/list/index.js:40:7)
    at D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:796:21
    at measureLifeCyclePerf (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:75:12)
    at ReactCompositeComponent._renderValidatedComponentWithoutOwnerOrContext (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:795:25)
    at ReactCompositeComponent._renderValidatedComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:822:32)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:362:30)
    at ReactCompositeComponent.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:258:21)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:371:34)
    at ReactCompositeComponent.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:258:21)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactDOMComponent.ReactMultiChild.Mixin.mountChildren (D:\www\test\express\node_modules\react-dom\lib\ReactMultiChild.js:238:44)
    at ReactDOMComponent.Mixin._createContentMarkup (D:\www\test\express\node_modules\react-dom\lib\ReactDOMComponent.js:653:32)
    at ReactDOMComponent.Mixin.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactDOMComponent.js:520:29)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:371:34)
[2017-05-24 11:22:45.551] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:23:15.719] [INFO] console - {}
[2017-05-24 11:23:15.738] [ERROR] app - TypeError: Cannot read property 'length' of undefined
    at List.render (D:/www/test/express/src/components/list/index.js:40:7)
    at D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:796:21
    at measureLifeCyclePerf (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:75:12)
    at ReactCompositeComponent._renderValidatedComponentWithoutOwnerOrContext (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:795:25)
    at ReactCompositeComponent._renderValidatedComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:822:32)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:362:30)
    at ReactCompositeComponent.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:258:21)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:371:34)
    at ReactCompositeComponent.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:258:21)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactDOMComponent.ReactMultiChild.Mixin.mountChildren (D:\www\test\express\node_modules\react-dom\lib\ReactMultiChild.js:238:44)
    at ReactDOMComponent.Mixin._createContentMarkup (D:\www\test\express\node_modules\react-dom\lib\ReactDOMComponent.js:653:32)
    at ReactDOMComponent.Mixin.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactDOMComponent.js:520:29)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:371:34)
[2017-05-24 11:23:15.885] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:23:35.532] [INFO] console - {}
[2017-05-24 11:23:35.553] [ERROR] app - TypeError: Cannot read property 'length' of undefined
    at List.render (D:/www/test/express/src/components/list/index.js:50:61)
    at D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:796:21
    at measureLifeCyclePerf (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:75:12)
    at ReactCompositeComponent._renderValidatedComponentWithoutOwnerOrContext (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:795:25)
    at ReactCompositeComponent._renderValidatedComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:822:32)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:362:30)
    at ReactCompositeComponent.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:258:21)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:371:34)
    at ReactCompositeComponent.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:258:21)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactDOMComponent.ReactMultiChild.Mixin.mountChildren (D:\www\test\express\node_modules\react-dom\lib\ReactMultiChild.js:238:44)
    at ReactDOMComponent.Mixin._createContentMarkup (D:\www\test\express\node_modules\react-dom\lib\ReactDOMComponent.js:653:32)
    at ReactDOMComponent.Mixin.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactDOMComponent.js:520:29)
    at Object.ReactReconciler.mountComponent (D:\www\test\express\node_modules\react-dom\lib\ReactReconciler.js:46:35)
    at ReactCompositeComponent.performInitialMount (D:\www\test\express\node_modules\react-dom\lib\ReactCompositeComponent.js:371:34)
[2017-05-24 11:23:35.670] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:24:26.901] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:25:02.986] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:25:21.085] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:27:49.045] [INFO] console - {}
[2017-05-24 11:27:49.191] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:28:50.413] [INFO] console - {}
[2017-05-24 11:28:50.553] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:33:43.686] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:33:45.950] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:47:57.273] [INFO] console - [ [Function: a] ]
[2017-05-24 11:47:57.368] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 11:51:56.577] [INFO] console - undefined
[2017-05-24 11:51:56.670] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 12:08:13.194] [INFO] console - undefined
[2017-05-24 12:08:19.050] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 12:09:02.607] [INFO] console - undefined
[2017-05-24 12:09:02.613] [INFO] console - markup
[2017-05-24 12:09:02.697] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 12:10:51.162] [INFO] console - undefined
[2017-05-24 12:10:51.166] [INFO] console - Timeout {
  _called: false,
  _idleTimeout: 2000,
  _idlePrev: 
   TimersList {
     _idleNext: [Circular],
     _idlePrev: [Circular],
     _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
     _unrefed: false,
     msecs: 2000 },
  _idleNext: 
   TimersList {
     _idleNext: [Circular],
     _idlePrev: [Circular],
     _timer: Timer { '0': [Function: listOnTimeout], _list: [Circular] },
     _unrefed: false,
     msecs: 2000 },
  _idleStart: 5660,
  _onTimeout: [Function],
  _repeat: null }
[2017-05-24 12:10:51.302] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 12:10:53.143] [INFO] console - 11
[2017-05-24 12:15:34.686] [INFO] console - <div class="index" data-reactroot="" data-reactid="1" data-react-checksum="-1806689617"><!-- react-empty: 2 --></div>
[2017-05-24 13:45:53.339] [INFO] console - { list: {}, routing: { locationBeforeTransitions: null } }
[2017-05-24 13:46:37.118] [INFO] console - { list: {}, routing: { locationBeforeTransitions: null } }
[2017-05-24 13:47:06.126] [INFO] console - { list: {}, routing: { locationBeforeTransitions: null } }
[2017-05-24 13:47:15.028] [INFO] console - { list: {}, routing: { locationBeforeTransitions: null } }
[2017-05-24 13:48:19.693] [INFO] console - { list: {}, routing: { locationBeforeTransitions: null } }
[2017-05-24 13:48:20.313] [INFO] console - {}
[2017-05-24 16:42:24.330] [INFO] console - markup
[2017-05-24 16:44:02.474] [INFO] console - markup
[2017-05-24 16:44:47.858] [INFO] console - markup
[2017-05-24 17:02:17.652] [INFO] console - Body {
  url: 'http://localhost:3000/list?page=1',
  status: 200,
  statusText: 'OK',
  headers: 
   Headers {
     _headers: 
      { 'x-powered-by': [Object],
        'content-type': [Object],
        'content-length': [Object],
        etag: [Object],
        'set-cookie': [Object],
        date: [Object],
        connection: [Object] } },
  ok: true,
  body: 
   PassThrough {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 696,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        prefinish: [Object],
        unpipe: [Function: onunpipe],
        drain: [Function],
        error: [Function: onerror],
        close: [Object],
        finish: [Object] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      TransformState {
        afterTransform: [Function],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: 'buffer' } },
  bodyUsed: false,
  size: 0,
  timeout: 0,
  _raw: [],
  _abort: false }
[2017-05-24 17:02:19.180] [INFO] console - Body {
  url: 'http://localhost:3000/list?page=1',
  status: 200,
  statusText: 'OK',
  headers: 
   Headers {
     _headers: 
      { 'x-powered-by': [Object],
        'content-type': [Object],
        'content-length': [Object],
        etag: [Object],
        'set-cookie': [Object],
        date: [Object],
        connection: [Object] } },
  ok: true,
  body: 
   PassThrough {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 696,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        prefinish: [Object],
        unpipe: [Function: onunpipe],
        drain: [Function],
        error: [Function: onerror],
        close: [Object],
        finish: [Object] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      TransformState {
        afterTransform: [Function],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: 'buffer' } },
  bodyUsed: false,
  size: 0,
  timeout: 0,
  _raw: [],
  _abort: false }
[2017-05-24 17:05:58.364] [INFO] console - Body {
  url: 'http://localhost:3000/list?page=1',
  status: 200,
  statusText: 'OK',
  headers: 
   Headers {
     _headers: 
      { 'x-powered-by': [Object],
        'content-type': [Object],
        'content-length': [Object],
        etag: [Object],
        'set-cookie': [Object],
        date: [Object],
        connection: [Object] } },
  ok: true,
  body: 
   PassThrough {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 696,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        prefinish: [Object],
        unpipe: [Function: onunpipe],
        drain: [Function],
        error: [Function: onerror],
        close: [Object],
        finish: [Object] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      TransformState {
        afterTransform: [Function],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: 'buffer' } },
  bodyUsed: false,
  size: 0,
  timeout: 0,
  _raw: [],
  _abort: false }
[2017-05-24 17:09:28.136] [INFO] console - Body {
  url: 'http://localhost:3000/list?page=1',
  status: 200,
  statusText: 'OK',
  headers: 
   Headers {
     _headers: 
      { 'x-powered-by': [Object],
        'content-type': [Object],
        'content-length': [Object],
        etag: [Object],
        'set-cookie': [Object],
        date: [Object],
        connection: [Object] } },
  ok: true,
  body: 
   PassThrough {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 696,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        prefinish: [Object],
        unpipe: [Function: onunpipe],
        drain: [Function],
        error: [Function: onerror],
        close: [Object],
        finish: [Object] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      TransformState {
        afterTransform: [Function],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: 'buffer' } },
  bodyUsed: false,
  size: 0,
  timeout: 0,
  _raw: [],
  _abort: false }
[2017-05-24 17:09:28.323] [INFO] console - Body {
  url: 'http://localhost:3000/list?page=1',
  status: 200,
  statusText: 'OK',
  headers: 
   Headers {
     _headers: 
      { 'x-powered-by': [Object],
        'content-type': [Object],
        'content-length': [Object],
        etag: [Object],
        'set-cookie': [Object],
        date: [Object],
        connection: [Object] } },
  ok: true,
  body: 
   PassThrough {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 696,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        prefinish: [Object],
        unpipe: [Function: onunpipe],
        drain: [Function],
        error: [Function: onerror],
        close: [Object],
        finish: [Object] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      TransformState {
        afterTransform: [Function],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: 'buffer' } },
  bodyUsed: false,
  size: 0,
  timeout: 0,
  _raw: [],
  _abort: false }
[2017-05-24 17:10:46.300] [INFO] console - Body {
  url: 'http://localhost:3000/list?page=1',
  status: 200,
  statusText: 'OK',
  headers: 
   Headers {
     _headers: 
      { 'x-powered-by': [Object],
        'content-type': [Object],
        'content-length': [Object],
        etag: [Object],
        'set-cookie': [Object],
        date: [Object],
        connection: [Object] } },
  ok: true,
  body: 
   PassThrough {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 696,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        prefinish: [Object],
        unpipe: [Function: onunpipe],
        drain: [Function],
        error: [Function: onerror],
        close: [Object],
        finish: [Object] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      TransformState {
        afterTransform: [Function],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: 'buffer' } },
  bodyUsed: false,
  size: 0,
  timeout: 0,
  _raw: [],
  _abort: false }
[2017-05-24 17:10:49.649] [INFO] console - Body {
  url: 'http://localhost:3000/list?page=1',
  status: 200,
  statusText: 'OK',
  headers: 
   Headers {
     _headers: 
      { 'x-powered-by': [Object],
        'content-type': [Object],
        'content-length': [Object],
        etag: [Object],
        'set-cookie': [Object],
        date: [Object],
        connection: [Object] } },
  ok: true,
  body: 
   PassThrough {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 696,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        prefinish: [Object],
        unpipe: [Function: onunpipe],
        drain: [Function],
        error: [Function: onerror],
        close: [Object],
        finish: [Object] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      TransformState {
        afterTransform: [Function],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: 'buffer' } },
  bodyUsed: false,
  size: 0,
  timeout: 0,
  _raw: [],
  _abort: false }
[2017-05-24 17:19:00.211] [INFO] console - Body {
  url: 'http://localhost:3000/list?page=1',
  status: 200,
  statusText: 'OK',
  headers: 
   Headers {
     _headers: 
      { 'x-powered-by': [Object],
        'content-type': [Object],
        'content-length': [Object],
        etag: [Object],
        'set-cookie': [Object],
        date: [Object],
        connection: [Object] } },
  ok: true,
  body: 
   PassThrough {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 696,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        prefinish: [Object],
        unpipe: [Function: onunpipe],
        drain: [Function],
        error: [Function: onerror],
        close: [Object],
        finish: [Object] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      TransformState {
        afterTransform: [Function],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: 'buffer' } },
  bodyUsed: false,
  size: 0,
  timeout: 0,
  _raw: [],
  _abort: false }
[2017-05-24 17:20:03.906] [INFO] console - Body {
  url: 'http://localhost:3000/list?page=1',
  status: 200,
  statusText: 'OK',
  headers: 
   Headers {
     _headers: 
      { 'x-powered-by': [Object],
        'content-type': [Object],
        'content-length': [Object],
        etag: [Object],
        'set-cookie': [Object],
        date: [Object],
        connection: [Object] } },
  ok: true,
  body: 
   PassThrough {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 696,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        prefinish: [Object],
        unpipe: [Function: onunpipe],
        drain: [Function],
        error: [Function: onerror],
        close: [Object],
        finish: [Object] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      TransformState {
        afterTransform: [Function],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: 'buffer' } },
  bodyUsed: false,
  size: 0,
  timeout: 0,
  _raw: [],
  _abort: false }
[2017-05-24 18:03:17.490] [INFO] console - Body {
  url: 'http://localhost:3000/list?page=1',
  status: 200,
  statusText: 'OK',
  headers: 
   Headers {
     _headers: 
      { 'x-powered-by': [Object],
        'content-type': [Object],
        'content-length': [Object],
        etag: [Object],
        'set-cookie': [Object],
        date: [Object],
        connection: [Object] } },
  ok: true,
  body: 
   PassThrough {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 696,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        prefinish: [Object],
        unpipe: [Function: onunpipe],
        drain: [Function],
        error: [Function: onerror],
        close: [Object],
        finish: [Object] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      TransformState {
        afterTransform: [Function],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: 'buffer' } },
  bodyUsed: false,
  size: 0,
  timeout: 0,
  _raw: [],
  _abort: false }
[2017-05-24 20:33:10.010] [INFO] console - Body {
  url: 'http://localhost:3000/list?page=1',
  status: 200,
  statusText: 'OK',
  headers: 
   Headers {
     _headers: 
      { 'x-powered-by': [Object],
        'content-type': [Object],
        'content-length': [Object],
        etag: [Object],
        'set-cookie': [Object],
        date: [Object],
        connection: [Object] } },
  ok: true,
  body: 
   PassThrough {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 696,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        prefinish: [Object],
        unpipe: [Function: onunpipe],
        drain: [Function],
        error: [Function: onerror],
        close: [Object],
        finish: [Object] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      TransformState {
        afterTransform: [Function],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: 'buffer' } },
  bodyUsed: false,
  size: 0,
  timeout: 0,
  _raw: [],
  _abort: false }
[2017-05-24 23:09:15.035] [INFO] console - Session {
  cookie: 
   { path: '/',
     _expires: null,
     originalMaxAge: null,
     httpOnly: true } }
[2017-05-24 23:09:15.123] [INFO] console - Body {
  url: 'http://localhost:3000/list?page=1',
  status: 200,
  statusText: 'OK',
  headers: 
   Headers {
     _headers: 
      { 'x-powered-by': [Object],
        'content-type': [Object],
        'content-length': [Object],
        etag: [Object],
        'set-cookie': [Object],
        date: [Object],
        connection: [Object] } },
  ok: true,
  body: 
   PassThrough {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 696,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        prefinish: [Object],
        unpipe: [Function: onunpipe],
        drain: [Function],
        error: [Function: onerror],
        close: [Object],
        finish: [Object] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      TransformState {
        afterTransform: [Function],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: 'buffer' } },
  bodyUsed: false,
  size: 0,
  timeout: 0,
  _raw: [],
  _abort: false }
[2017-05-24 23:10:20.940] [INFO] console - undefined
[2017-05-24 23:10:21.002] [INFO] console - Body {
  url: 'http://localhost:3000/list?page=1',
  status: 200,
  statusText: 'OK',
  headers: 
   Headers {
     _headers: 
      { 'x-powered-by': [Object],
        'content-type': [Object],
        'content-length': [Object],
        etag: [Object],
        'set-cookie': [Object],
        date: [Object],
        connection: [Object] } },
  ok: true,
  body: 
   PassThrough {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 696,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        prefinish: [Object],
        unpipe: [Function: onunpipe],
        drain: [Function],
        error: [Function: onerror],
        close: [Object],
        finish: [Object] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      TransformState {
        afterTransform: [Function],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: 'buffer' } },
  bodyUsed: false,
  size: 0,
  timeout: 0,
  _raw: [],
  _abort: false }
[2017-05-24 23:11:24.050] [INFO] console - Body {
  url: 'http://localhost:3000/list?page=1',
  status: 200,
  statusText: 'OK',
  headers: 
   Headers {
     _headers: 
      { 'x-powered-by': [Object],
        'content-type': [Object],
        'content-length': [Object],
        etag: [Object],
        'set-cookie': [Object],
        date: [Object],
        connection: [Object] } },
  ok: true,
  body: 
   PassThrough {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 696,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        prefinish: [Object],
        unpipe: [Function: onunpipe],
        drain: [Function],
        error: [Function: onerror],
        close: [Object],
        finish: [Object] },
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 1,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _transformState: 
      TransformState {
        afterTransform: [Function],
        needTransform: true,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: 'buffer' } },
  bodyUsed: false,
  size: 0,
  timeout: 0,
  _raw: [],
  _abort: false }
[2017-05-24 23:14:11.094] [INFO] console - Session {
  cookie: 
   { path: '/',
     _expires: null,
     originalMaxAge: null,
     httpOnly: true } }
[2017-05-24 23:14:36.938] [ERROR] app - { Error: ENOENT: no such file or directory, open 'D:\www\test\express\views\common\header.ejs'
    at Error (native)
    at Object.fs.openSync (fs.js:634:18)
    at Object.fs.readFileSync [as fileLoader] (fs.js:502:33)
    at fileLoader (D:\www\test\express\node_modules\ejs\lib\ejs.js:220:18)
    at includeSource (D:\www\test\express\node_modules\ejs\lib\ejs.js:257:14)
    at D:\www\test\express\node_modules\ejs\lib\ejs.js:604:26
    at Array.forEach (native)
    at Object.Template.generateSource (D:\www\test\express\node_modules\ejs\lib\ejs.js:580:15)
    at Object.Template.compile (D:\www\test\express\node_modules\ejs\lib\ejs.js:483:12)
    at Object.compile (D:\www\test\express\node_modules\ejs\lib\ejs.js:338:16)
    at handleCache (D:\www\test\express\node_modules\ejs\lib\ejs.js:181:18)
    at tryHandleCache (D:\www\test\express\node_modules\ejs\lib\ejs.js:203:14)
    at View.exports.renderFile [as engine] (D:\www\test\express\node_modules\ejs\lib\ejs.js:412:10)
    at View.render (D:\www\test\express\node_modules\express\lib\view.js:128:8)
    at tryRender (D:\www\test\express\node_modules\express\lib\application.js:640:10)
    at EventEmitter.render (D:\www\test\express\node_modules\express\lib\application.js:592:3)
  errno: -4058,
  code: 'ENOENT',
  syscall: 'open',
  path: 'D:\\www\\test\\express\\views\\common\\header.ejs' }
[2017-05-24 23:15:18.784] [INFO] console - Session {
  cookie: 
   { path: '/',
     _expires: null,
     originalMaxAge: null,
     httpOnly: true },
  message: '',
  user: { username: 'w' } }
[2017-05-24 23:37:10.958] [INFO] console - { user: undefined, message: undefined }
[2017-05-24 23:37:10.991] [INFO] console - Session {
  cookie: 
   { path: '/',
     _expires: null,
     originalMaxAge: null,
     httpOnly: true } }
[2017-05-24 23:37:11.019] [INFO] console - { user: undefined, message: undefined }
[2017-05-24 23:57:41.292] [INFO] console - { list: {},
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  routing: { locationBeforeTransitions: null } }
[2017-05-24 23:57:41.391] [INFO] console - { list: 
   { data: [ [Object], [Object], [Object], [Object], [Object] ],
     num: 5,
     page: 1 },
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  routing: { locationBeforeTransitions: null } }
